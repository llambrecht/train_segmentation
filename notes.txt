//////////////////////////////////////////////////
MAKING PATCH
//////////////////////////////////////////////////

On a des images ppm de la base DRIVE.
	-Des images de rétine "images nues" nu_im en format jpg
	-Des images segmentés "vérité terrain" gt_im en format gif

Les images sont 584x565. On va créer des patchs 48*48 de cette façon  :
	-On prend aléatoirement un pixel de l'image qui sera le centre d'un patch
		-On crée un "patch nu"
		-On prend le même centre dans les images de vérité terrain et on crée un
		 patch de la même façon
		 		-on exporte les résultats en fichiers "nu_im_patch_i" et "gt_im_patch_i"
				pour nues et ground truth

	-Mettre les images nues en noir et blanc ?



	-On prend en argument de patch_making le nombre total de patch nbpatch que
	l'on veut. On a 20 images, donc il faut que nbpatch soit un multiple de 20

	Algo :

	Arg : nbPatch, le nombre de patch total
	Macro : nbImg, le nombre d'images
					taillePatch, la taille des patchs
					tailleImg, la taille des images

	si(taillePatch < 5) error
	si(taillePatch > tailleImg/2) error
	si(taillePatch%2 != 1) taillePatch--; // pour pouvoir random pile au centre


	si nbPatch%nbImg != 0, nbPatch += nbPatch%nbImg;

	nbPatchPerImg = nbPatch/nbImg;

	i <- 0;
	nbCurrImg <- 0;
	tant que nbCurrImg < nbImg{
		i <- 0;
		tant que i < nbPatchPerImg {
			createPatch(nu_im_i.jpg, nu_im_patch_i.jpg, taillePatch, tailleImg);
			createPatch(gt_im_i.gif, gt_im_patch_i.gif, taillePatch, tailleImg)
		}
	}


	Avec :

	createPatch(source, dest, taillePatch, tailleImg){
		rdm_i <- un random entre 0 + taillePatch et tailleImg - taillePatch
		rdm_j <- un random entre 0 + taillePatch et tailleImg - taillePatch
		patch[taillePatch][taillePatch];
		i <- 0;
		j <- 0;
		ip <- 0;
		jp <- 0;
		pour j de rdm_j-taillePatch/2 à rdm_j+taillePatch/2
			pour i de rdm_i-taillePatch/2 à rdm_i+taillePatch/2
				patch[ip][jp] = source[i][j];
				ip++
				jp++


	}


///////////////////////////////////////////////





Augmenter les données : faire des rotations (enregistrer parce que ça prend du temps) -> scipi rotation
	-> faire des patchs sur les images rotatées.
	-> pas besoin d'enregistrer les patchs


deux vérités terrain
algorithme de consensus : staple
	intersection ou union des deux
	
Gt = np.zeros(h,w,3)
Gt[:,:,0] = (mask==0).astype(int)
	   ,1] = (imggt==0)
	   ,2] = (imggt==1)












